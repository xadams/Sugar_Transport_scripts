#!/usr/bin/env bash
# This script is helpful for autogenerating the windows. Give the script
# the file of the generic "win.in" and it will generate the desired number
# of directories and add the appropriate win.in files for each
# This is a subroutine of the full executable abf
# abf ---> win ---> abf_conf

# help text
if [[ $1 = "help" ]]; then
    echo This script is helpful for autogenerating ABF windows. Give the script the file of the generic "win.in" and optionally the number of windows and it will generate the desired number of directories and add the appropriate win.in files for each
    exit
fi

# abort if no arguments received
if [ -z "$1" ]; then
    file=$(basename "$0" )
    echo "No arguments given. Type '$file help' for detailed instructions."
    exit
fi

# check if the win.in file exists 
if [ -f $1 ]
then
    echo "$1 exists"
else
    echo "Hey buddy, $1 doesn't exist"
    exit
fi

# either get the window number as the second argument or query the user
echo -n "Enter the number of windows: "
read win

echo -n "Enter the start value: "
read start

echo -n "Enter the extended system input: "
read xsc

end=$(($start+5*$win))

for i in $(eval echo {1..$win} );
do
    j=$((($i-1)*5+$start))
    k=$(($j+5))
    sed s/lowerboundary/lowerboundary\ \ \ $j/g $1 > win$i.in
    sed -i.bak s/upperboundary/upperboundary\ \ \ $k/g win$i.in
    mkdir win$i
    $subhome/abf_conf $i $2 $xsc
    mv win$i.in win$i/
    mv win$i.conf win$i/
    mv win$i.pdb win$i/
done
rm *.bak
